<?xml version="1.0" encoding="utf-8"?><Search><pages Count="19"><page Index="1"><![CDATA[]]></page><page Index="2"><![CDATA[Clase N°8 | Armado de proyecto y



               Reporte de resultados





               Temario:


                   ●  Primera Fase: Storytelling (Clase #1).
                   ●  Segunda Fase: Requerimientos, Épicas, Features, User Stories (Clase #2).

                   ●  Tercera Fase: Criterios Funcionales y No Funcionales (Clase #3)
                   ●  Cuarta Fase: Tests Sets (Clase #4)
                   ●  Quinta Fase: Tipos de Prueba y Metodologías (Clase #5)

                   ●  Sexta Fase: Bug Report: Error, Defecto, Fallo (Clase #6)
                   ●  Séptima Fase: Cobertura de Pruebas (Clase #7)

                   ●  Octava Fase: Reporte de Ciclo de Prueba y consideraciones antes de la release
                       (Clase #8)
                   ●  Preentrega del proyecto





               Objetivo de la clase


               En esta clase, vamos a dar el último paso antes de la entrega final del proyecto.
               Repasaremos los conceptos clave vistos hasta ahora, y nos enfocaremos en el Reporte de
               Ciclo de Prueba y las consideraciones antes de una Release. Aprenderemos cómo
               documentar los resultados de nuestras pruebas, gestionar hallazgos y asegurar que el
               Software cumpla con los criterios de calidad. Además, realizaremos la Pre Entrega del
               Proyecto, poniendo en práctica todo lo aprendido, para pulir los últimos detalles.

                    ¡Es hora de asegurarnos de que nuestro trabajo esté listo para la Pre-Entrega!]]></page><page Index="3"><![CDATA[Introducción General




               Bienvenidos al recorrido formativo que integra el proceso de desarrollo y aseguramiento de
               calidad de Software con la experiencia práctica en la plataforma de Talento Lab. Esta
               plataforma, además de servir como entorno de práctica, les permitirá cargar su CV, llenar
               formularios, realizar consultas y simular situaciones reales. A lo largo de estas 8 fases se
               abordará una problemática concreta: La necesidad de desarrollar un producto digital que
               responda a los requerimientos de un mercado laboral competitivo. Iremos aplicando
               conceptos que van desde la definición del Storytelling hasta la elaboración de reportes de
               pruebas y consideraciones finales antes de un Release.





               Fase Nro°1: Storytelling


               En esta primera fase nos sumergiremos en el mundo del Storytelling. En esta etapa,
               exploraremos cómo contar una historia convincente que conecte a los usuarios con el
               producto.

                   1.  Contextualización: La plataforma Talento Lab necesita contar con una historia que
                       inspire y motive a los usuarios a confiar en sus servicios para mejorar su
                       empleabilidad.

                   2.  Desarrollo de la Historia: Deberán de identificar el mensaje central, los personajes
                       (por ejemplo, un candidato que busca trabajo, un mentor y un reclutador), y el
                       conflicto que se resolverá a lo largo de estas fases.

                   3.  Producto final: Un breve relato o guión que defina la “voz” y el “alma” de Talento
                       Lab, que será la base para las siguientes fases.

                   4.  Vinculación con Talento Lab: La narrativa creada será la que acompañe la
                       plataforma, dándole un sentido de identidad y propósito.]]></page><page Index="4"><![CDATA[Ejemplo App de Hotel


               Conozcamos a Laura, quien es una viajera frecuente la cual utiliza la App del Hotel para
               planificar sus viajes de vacaciones y ocio.

























               En la Storytelling que se ve, observamos que hay un contexto por el cual esta historia da
               comienzo a diferentes propósitos y dificultades en el recorrido de la App.

                                       Ejemplo:     Requerimientos TechLab - C8





               Fase Nro°2: Definición de Requerimientos



               Ahora, avanzamos a la segunda fase del recorrido, donde transformaremos nuestra historia
               en requerimientos reales, definiendo Épicas, Features y User Stories que guiarán al
               desarrollo de Talento Lab.

                   1.  Definición de Requerimientos: Identificar qué funcionalidades y características son
                       necesarias para materializar la narrativa en un producto funcional.

                   2.  Construcción de Épicas y Features: Organizaremos los requerimientos en bloques
                       lógicos, alineados con las necesidades de los usuarios (por ejemplo, cargar CV,
                       formularios de consulta, etc.)

                   3.  Redacción de User Stories: Crearemos las historias de usuario claras y concisas
                       que describan el comportamiento esperado de la plataforma.]]></page><page Index="5"><![CDATA[4.  Producto final: Un documento con la lista de requerimientos, dividida en épicas y
                       user stories, que servirá como roadmap para el desarrollo del producto.

                   5.  Vinculación con Talento Lab: Cada historia de usuario se relaciona con una
                       función clave en Talento Lab, haciendo énfasis en cómo estas funcionalidades
                       resolverán las necesidades y problemas reales de los usuarios.


               Ejemplo App de Hotel


               Avanzamos con la historia de Laura quien ahora necesita gestionar todo lo que haya que
               organizar para su viaje como también las etapas para poder cumplir cada proceso; veamos
               la siguiente imagen como muestra.
















                                       Ejemplo:     Requerimientos TechLab - C8





               Fase Nro°3: Criterios Funcionales



               Continuamos con la tercera fase, donde definiremos en detalle los criterios Funcionales y no
               Funcionales que guiarán el desarrollo y calidad de nuestro producto.

                   1.  Criterios Funcionales: Van a establecer qué debe hacer la plataforma Talento Lab
                       (por ejemplo, subir y gestionar CV, realizar consultas, etc.)

                   2.  Criterios no funcionales: Van a establecer estándares de rendimiento, usabilidad,
                       seguridad y escalabilidad, entre otros.

                   3.  Producto Final: Terminar por generar un listado detallado que servirá de base para
                       la implementación de pruebas, asegurando que se cumplen las expectativas de
                       calidad.]]></page><page Index="6"><![CDATA[4.  Vinculación con Talento Lab: Los criterios se adaptan a la realidad de la
                       plataforma, garantizando que la experiencia del usuario sea óptima y que se logre el
                       objetivo de conectar talento con oportunidades laborales.



               Ejemplo App de Hotel


               Como podemos observar, vemos como se detalla cada apartado tanto funcional como no
               funcional para comenzar a separar tareas y organizar el avance de testeos.






















                                       Ejemplo:     Requerimientos TechLab - C8





               Fase Nro°4: Test Sets




               Avanzamos hacia la cuarta fase, en la que diseñaremos y organizaremos el conjunto de
               pruebas o Test Sets que permitirán verificar el correcto funcionamiento de Talento Lab.

                   1.  Definición de Escenarios de Prueba: Identificar y documentar diferentes
                       escenarios en los que se utilizará la plataforma.

                   2.  Diseño de Test Cases: Redactar casos de prueba que validen tanto los
                       requerimientos funcionales como no funcionales.

                   3.  Producto Final: Una colección organizada de Test Sets, documentados y listos para
                       su ejecución en el ambiente de desarrollo.

                   4.  Vinculación con Talento Lab: Los Test Sets estarán diseñados pensando en las
                       funciones clave de la plataforma, asegurando que cada módulo (como la carga de]]></page><page Index="7"><![CDATA[CV o el sistema de consultas) cumpla con los criterios establecidos y ofrezca una
                       experiencia robusta y confiable.


               Ejemplo App de Hotel






















                                       Ejemplo:     Requerimientos TechLab - C8




               Fase Nro°5 (Opcional): Pruebas


               En la quinta fase, explicaremos los distintos tipos de pruebas y metodologías que se
               emplean en el aseguramiento de la calidad, aplicándolos al contexto de Talento Lab.

                   1.  Tipos de Prueba: Probaremos y diferenciaremos en pruebas unitarias, de
                       integración, de sistema, de aceptación, entre otras.

                   2.  Metodologías de Testing: Analizar metodologías ágiles, en cascada, y su
                       aplicación en el ciclo de desarrollo de software.

                   3.  Producto Final: Generar un informe que detalle las pruebas a realizar, su
                       justificación y metodología a seguir.

                   4.  Vinculación con Talento Lab: La aplicación de estas pruebas garantiza que la
                       plataforma ofrezca un servicio confiable y eficiente, alineado con las expectativas de
                       los usuarios en el mercado laboral.]]></page><page Index="8"><![CDATA[Ejemplo App de Hotel














                                       Ejemplo:     Requerimientos TechLab - C8




               Metodologías Aplicadas:

                   ●  TDD (Test Driven Development): Se implementa en las pruebas unitarias para
                       garantizar que cada componente funcione correctamente antes de integrarlo.
                   ●  Agile Testing: Se utiliza en pruebas de integración y de aceptación, facilitando
                       ciclos rápidos de feedback y ajustes continuos durante el desarrollo.
                   ●  Enfoque End-to-End: Para las pruebas de sistema, se simula el recorrido completo
                       del usuario en la aplicación, asegurando que todos los módulos interactúen de forma
                       armónica.





               Fase Nro°6: Bug Report




               Llegamos a la sexta fase, donde aprenderemos a identificar, documentar y comunicar
               errores a través de la elaboración de Bug Reports, esenciales para mantener la calidad en
               Talento Lab.

                   1.  Definición de Terminología: Diferenciar entre error, defecto y fallo, entendiendo su
                       impacto en el software.

                   2.  Proceso de Reporte de Bugs: Establecer un formato y flujo de trabajo para la
                       notificación de problemas.

                   3.  Producto Final: Un conjunto de ejemplos de Bug Reports que reflejan el proceso de
                       identificación y comunicación de problemas.

                   4.  Vinculación con Talento Lab: La correcta gestión de incidencias en Talento Lab es
                       crucial para mantener la confiabilidad y credibilidad de la plataforma, asegurando
                       que los usuarios reciban un servicio de calidad y sin interrupciones.]]></page><page Index="9"><![CDATA[Ejemplo App de Hotel






















                                       Ejemplo:     Requerimientos TechLab - C8






               Fase Nro°7: Cobertura de Pruebas


               En la séptima fase, evaluaremos la cobertura de pruebas, identificando áreas críticas y
               asegurándonos de que todas las funcionalidades de Talento Lab estén debidamente
               validadas.

                   1.  Concepto de Cobertura de Pruebas: Entender qué es y por qué es importante
                       medir la cobertura.

                   2.  Herramientas de medición: Introducir herramientas que ayuden a medir el alcance
                       de los test realizados.

                   3.  Análisis y Retroalimentación: Revisar la cobertura actual y proponer mejoras para
                       alcanzar niveles óptimos.

                   4.  Producto Final: Un informe de cobertura de pruebas que identifique puntos fuertes,
                       áreas de riesgo y propuesta de mejora.

                   5.  Vinculación con Talento Lab: Garantizar una alta cobertura de pruebas en la
                       plataforma asegura que todos los procesos críticos, desde la carga de información
                       hasta la consulta de oportunidades, funcionen de manera fluida y sin errores,
                       incrementando la confianza de los usuarios en el servicio.]]></page><page Index="10"><![CDATA[Ejemplo App de Hotel































                                       Ejemplo:     Requerimientos TechLab - C8




               Fase Nro°8: Reporte del ciclo de pruebas


               Finalmente, en la octava fase, consolidaremos todo el trabajo realizado mediante la
               elaboración del reporte del ciclo de prueba y las consideraciones finales que debemos tener
               en cuenta antes de realizar la release de Talento Lab.

               Vinculación con Talento Lab: Este reporte final no solo cierra el ciclo de desarrollo, sino
               que se convierte en un documento vital para el equipo de Talento Lab, asegurando que el
               producto cumpla con altos estándares de calidad y esté preparado para ofrecer una
               experiencia sobresaliente a sus futuros usuarios.]]></page><page Index="11"><![CDATA[Ejemplo App de Hotel










































                                       Ejemplo:     Requerimientos TechLab - C8

               Ejecución de Pruebas: ¡Manos a la obra!



               La ejecución de pruebas es como el momento de la verdad: ponemos a prueba el software
               para ver si funciona como debería. Hay dos formas principales de ejecutar pruebas:


                   ●  Ejecución manual: Un tester ejecuta las pruebas siguiendo un conjunto de pasos
                       predefinidos. Es como seguir una receta de cocina al pie de la letra. El tester
                       interactúa directamente con el software, simulando el uso que haría un usuario real.
                       (Imagen de un tester ejecutando pruebas manualmente)

                          ○  Ejemplo: Un tester prueba el formulario de registro de usuarios. Sigue los
                              pasos del caso de prueba: ingresa un nombre, un correo electrónico, una
                              contraseña, y hace clic en "Registrar". Observa si el usuario se registra
                              correctamente y si se muestran los mensajes de error adecuados en caso de
                              datos inválidos.
                   ●  Ejecución automatizada: Un software ejecuta las pruebas automáticamente, sin
                       necesidad de intervención humana. Es como tener un robot de cocina que prepara la
                       comida por nosotros. Se utilizan herramientas de software para crear scripts que
                       simulan las acciones del usuario y verifican los resultados. (Imagen de un software]]></page><page Index="12"><![CDATA[ejecutando pruebas automáticamente)

                          ○  Ejemplo: Se utiliza un software de pruebas automatizadas para verificar que
                              todos los enlaces del sitio web funcionan correctamente. El script recorre
                              todas las páginas y verifica que cada enlace lleva a la página correcta.


               Reporte y Ciclo de Vida de Defectos: ¡Cazando errores!


               Cuando encontramos un defecto durante la ejecución de pruebas, lo registramos en un
               informe de defectos. Este informe incluye información detallada sobre el defecto, como su
               descripción, severidad, prioridad y entorno. (Imagen de un informe de defectos)


               Luego, el defecto pasa por un ciclo de vida que incluye las siguientes etapas:

                   1.  Apertura: Se registra el defecto en la herramienta de seguimiento de defectos (Jira,
                       Bugzilla, Trello, etc.). Se le asigna un ID único y se establece su estado como
                       "Abierto".
                   2.  Asignación: Se asigna el defecto a un desarrollador para que lo solucione. El
                       estado del defecto cambia a "Asignado".
                   3.  Solución: El desarrollador corrige el código para eliminar el defecto. Una vez que
                       cree que el error está solucionado, cambia el estado del defecto a "Resuelto".
                   4.  Verificación: Se verifica que el defecto ha sido solucionado correctamente. El tester
                       vuelve a probar la funcionalidad afectada para confirmar que el error ya no existe. Si
                       el error persiste, se vuelve a abrir el defecto y se reasigna al desarrollador. Si el error
                       se ha solucionado, se cambia el estado a "Verificado".
                   5.  Cierre: Se cierra el defecto cuando ha sido solucionado y verificado. El estado final
                       es "Cerrado".

               Reporte de Ciclo de Prueba: ¡La foto del momento!


               Al finalizar un ciclo de pruebas (por ejemplo, al completar las pruebas de una nueva
               funcionalidad), generamos un reporte que resume los resultados obtenidos. Este reporte
               incluye información sobre la cantidad de pruebas ejecutadas, la cantidad de defectos
               encontrados, la severidad y prioridad de los defectos, y el estado de las pruebas (exitosas,
               fallidas, bloqueadas). (Imagen de un reporte de ciclo de pruebas)

               Consideraciones antes de la Release: ¡Últimos retoques!


               Antes de lanzar el software al mercado (release), debemos asegurarnos de que:

                   ●  Se han solucionado todos los defectos críticos y de alta prioridad. Estos son los
                       errores que impiden el funcionamiento del software o que afectan gravemente la
                       experiencia del usuario.
                   ●  Se han verificado todas las funcionalidades importantes del software. Nos
                       aseguramos de que las funcionalidades clave del software funcionan correctamente
                       en todos los escenarios posibles.]]></page><page Index="13"><![CDATA[●  Se ha documentado el software correctamente. Se actualizan los manuales de
                       usuario, las guías de instalación y demás documentación para reflejar los cambios
                       realizados en el software.
                   ●  Se ha capacitado al equipo de soporte técnico. El equipo de soporte debe estar
                       preparado para responder a las preguntas de los usuarios y solucionar los
                       problemas que puedan surgir.


               ¿Cómo armar un Plan de Pruebas?


               El Plan de Pruebas es un documento clave que define el alcance, los objetivos, los recursos
               y la estrategia de las pruebas.
               A continuación detallamos los pasos para elaborarlo:

                   1.  Definir el alcance: ¿Qué funcionalidades del software se van a probar? ¿Qué tipos
                       de pruebas se van a realizar (funcionales, de rendimiento, de seguridad, etc.)?
                   2.  Establecer los objetivos: ¿Cuál es el objetivo principal de las pruebas? ¿Qué
                       criterios de calidad se deben cumplir?
                   3.  Identificar los recursos: ¿Qué recursos se necesitan para llevar a cabo las
                       pruebas? ¿Cuántos testers? ¿Qué herramientas de software? ¿Qué entornos de
                       prueba?
                   4.  Definir la estrategia: ¿Cómo se van a ejecutar las pruebas? ¿Qué metodologías se
                       van a utilizar? ¿Cómo se van a gestionar los defectos?
                   5.  Elaborar el cronograma: ¿Cuándo se van a realizar las pruebas? ¿Cuánto tiempo
                       se va a dedicar a cada etapa?
                   6.  Documentar el plan: El Plan de Pruebas debe quedar documentado en un
                       documento formal que sea accesible para todo el equipo.


               ¿Cómo elaborar Casos de Prueba?


               Los Casos de Prueba son descripciones detalladas de los pasos que se deben seguir para
               probar una funcionalidad específica del software.
               Algunas consideraciones:

                   1.  Identificar la funcionalidad: ¿Qué funcionalidad se va a probar?
                   2.  Definir los datos de entrada: ¿Qué datos se van a utilizar para probar la
                       funcionalidad?
                   3.  Describir los pasos: ¿Qué pasos se deben seguir para probar la funcionalidad?
                   4.  Establecer los resultados esperados: ¿Qué resultados se esperan al probar la
                       funcionalidad?
                   5.  Documentar el caso de prueba: El Caso de Prueba debe quedar documentado en
                       un documento formal que sea accesible para todo el equipo.

               ¿Cómo elaborar Informes de Defectos?


               Los Informes de Defectos son documentos que describen los errores encontrados durante
               las pruebas.]]></page><page Index="14"><![CDATA[Elementos que debe incluir:

                   1.  Título: Una descripción breve y clara del defecto.
                   2.  Descripción: Una explicación detallada del defecto, incluyendo los pasos para
                       reproducirlo.
                   3.  Severidad: La clasificación del defecto según su impacto en el software (Crítica,
                       Alta, Media, Baja).
                   4.  Prioridad: La urgencia de solucionar el defecto (Urgente, Alta, Media, Baja).
                   5.  Entorno: El entorno en el que se produce el defecto (navegador, sistema operativo,
                       etc.).
                   6.  Datos adjuntos: Capturas de pantalla, videos o archivos de registro que puedan
                       ayudar a entender el defecto.

               ¿Cómo elaborar Reportes de Ciclo de Pruebas?


               Los Reportes de Ciclo de Pruebas son documentos que resumen los resultados obtenidos
               durante un ciclo de pruebas.
               Elementos que debe incluir:

                   1.  Pruebas Ejecutadas: La cantidad de pruebas que se ejecutaron durante el ciclo.
                   2.  Pruebas Exitosas: La cantidad de pruebas que se completaron exitosamente.
                   3.  Pruebas Fallidas: La cantidad de pruebas que fallaron.
                   4.  Defectos Encontrados: La cantidad de defectos encontrados durante el ciclo.
                   5.  Defectos Críticos: La cantidad de defectos críticos encontrados.
                   6.  Defectos de Alta Prioridad: La cantidad de defectos de alta prioridad encontrados.





               Consignas de Pre Entrega de Proyecto



               Esta pre-entrega tiene como objetivo integrar y aplicar de forma práctica los conocimientos
               adquiridos a lo largo de las clases sobre pruebas de calidad de software. Si estuviste
               realizando los ejercicios prácticos, es posible que solo debas realizar unas pocas
               modificaciones. Como ya sabemos utilizaremos como caso de estudio la web de Talento
               Lab.


               Primera Pre-Entrega – Evaluación de Calidad en Talento Lab


               Sitio Web Talento Lab:
               https://talentolab-test.netlify.app/


                  Objetivo: A lo largo de las 8 fases del curso, hemos trabajado en el desarrollo de
               pruebas de calidad aplicadas a Talento Lab, una plataforma ficticia de consultoría laboral
               donde los usuarios pueden cargar su CV, llenar formularios y buscar oportunidades
               laborales.]]></page><page Index="15"><![CDATA[Instrucciones generales:

                   ●  Deberás completar las siguientes consignas basadas en cada una de las fases
                       vistas.
                   ●  La Fase 5 (Metodologías de Prueba) es opcional, pero sumará puntos adicionales
                       a la evaluación.
                   ●  La entrega debe incluir documentos organizados y bien estructurados en un formato
                       claro y profesional.
                   ●  En caso de utilizar hojas de cálculo, asegúrate de que los datos sean comprensibles
                       y bien categorizados.






               Storytelling

               Redactá una historia de usuario que refleje un escenario realista en Talento Lab. La historia
               debe mostrar cómo un usuario interactúa con la plataforma desde su registro hasta la
               postulación a un trabajo.

               Criterios mínimos:


                   ●  Debe estar escrita en forma narrativa.
                   ●  Incluir un personaje principal (ejemplo: un candidato en búsqueda de empleo).
                   ●  Mostrar un problema y cómo la plataforma lo ayuda a resolverlo.




               Requerimientos, Épicas, Features y User Stories


               Define los requerimientos principales de Talento Lab y desglosa las funcionalidades en
               Épicas, Features y User Stories.

               Criterios mínimos:

                   ●  Mínimo 2 Épicas, cada una con al menos 2 Features.
                   ●  Cada Feature debe estar desglosada en mínimo 2 User Stories.
                   ●  La redacción de las User Stories debe seguir el formato:
                        “Como [tipo de usuario], quiero [acción] para [beneficio]”.]]></page><page Index="16"><![CDATA[Criterios Funcionales y No Funcionales


               Define y organiza en un cuadro los criterios funcionales y no funcionales de Talento
               Lab.


               Criterios mínimos:

                   ●  Mínimo 4 criterios funcionales (ejemplo: inicio de sesión, carga de CV, postulación
                       a empleos, notificaciones).
                   ●  Mínimo 3 criterios no funcionales (ejemplo: tiempos de respuesta, accesibilidad,
                       compatibilidad con dispositivos).
                   ●  Explicar por qué cada criterio es importante para la calidad del sistema.




               Test Sets (Conjunto de Pruebas)


               Diseña un conjunto de casos de prueba para Talento Lab en una hoja de cálculo.

               Criterios mínimos:


                   ●  Mínimo 4 casos de prueba con los siguientes campos:
                          ○  Funcionalidad
                          ○  Escenario de prueba
                          ○  Pasos de ejecución
                          ○  Resultado esperado
                          ○  Resultado obtenido (puede quedar en blanco si no se ha ejecutado aún).




               Tipos de Prueba y Metodologías (Opcional)

               Investiga y explica dos metodologías de prueba aplicables a Talento Lab y justifica cuál
               sería la más adecuada para evaluar la calidad de la plataforma.

               Criterios mínimos:


                   ●  Mencionar al menos 2 metodologías de prueba (ejemplo: Waterfall, Agile,
                       DevOps).
                   ●  Explicar ventajas y desventajas de cada una.
                   ●  Justificar cuál aplicarías en Talento Lab y por qué.]]></page><page Index="17"><![CDATA[Bug Report (Errores, Defectos y Fallos)


               Realiza un informe de defectos sobre errores detectados en Talento Lab, siguiendo el
               formato adecuado.


               Criterios mínimos:

                   ●  Mínimo 3 defectos documentados (1 error, 1 defecto y 1 fallo).
                   ●  Incluir los siguientes campos en una hoja de cálculo o documento estructurado:
                          ○  Título
                          ○  Descripción
                          ○  Severidad
                          ○  Prioridad
                          ○  Entorno (sistema operativo, navegador, dispositivo).
                          ○  Pasos para reproducir
                          ○  Evidencia adjunta (captura de pantalla o descripción del error).




               Cobertura de Pruebas

               Evalúa el nivel de cobertura de pruebas en Talento Lab, generando un cuadro con los
               siguientes datos:

               Criterios mínimos:


                   ●  Mínimo 5 funcionalidades analizadas.
                   ●  Para cada funcionalidad, calcular la cobertura de pruebas usando la fórmula:
                       Cobertura(%)=(Casos de Prueba Ejecutados / Cantidad Total de Casos de
                       Prueba)×100Cobertura
                   ●  Identificar qué funcionalidades tienen baja cobertura y justificar qué pruebas faltan.
                   ●  Agregar una priorización de casos de prueba (Alta, Media, Baja).




               Reporte de Ciclo de Prueba y Consideraciones Antes de la Release

               Redacta un informe de cierre de pruebas para Talento Lab, destacando los hallazgos más
               relevantes y posibles mejoras antes del lanzamiento.


               Criterios mínimos:

                   ●  Resumen de ejecución (¿Cuántos casos de prueba fueron ejecutados? ¿Cuál fue
                       el porcentaje de éxito?).
                   ●  Principales defectos detectados y su impacto en la plataforma.
                   ●  Recomendaciones antes de la release (ejemplo: correcciones críticas, mejoras de
                       rendimiento, pruebas adicionales necesarias).]]></page><page Index="18"><![CDATA[   Fecha de Entrega y Evaluación

               Fecha límite de entrega: (Indicar la fecha específica según la planificación del curso)
               Formato de entrega: Documentos organizados en PDF o planillas de Excel.
               Puntaje adicional: La Fase 5 (Metodologías de Prueba) es opcional, pero si se completa
               correctamente, sumará puntos extra.

               Criterios de Evaluación:

                   ●  Claridad y estructura de los entregables.
                   ●  Aplicación correcta de los conceptos vistos en cada fase.
                   ●  Justificación adecuada en cada tarea.
                   ●  Uso adecuado de tablas y formatos según corresponda.




                  Notas Finales:

                   ●  Esta pre-entrega es una instancia fundamental para evaluar el dominio de los
                       conceptos vistos.
                   ●  La presentación debe reflejar un trabajo profesional, con información clara y bien
                       fundamentada.
                   ●  En caso de dudas, se recomienda revisar los materiales de las clases o realizar
                       consultas.]]></page><page Index="19"><![CDATA[]]></page></pages></Search>