var ols=[{caption:" ",page:"2",url:"",level:"1",children:[]},{caption:"Clase N° 4 | Introducción a Pytest y Automatización Básica ",page:"2",url:"",level:"1",children:[{caption:"Temario ",page:"2",url:"",level:"2",children:[]},{caption:"Objetivos de la clase ",page:"2",url:"",level:"2",children:[]}]},{caption:"Pytest ",page:"3",url:"",level:"1",children:[{caption:"¿Para qué se usa? ",page:"3",url:"",level:"2",children:[]},{caption:"●​Para verificar automáticamente que las funciones del código (por ejemplo: sumar(), dividir(), etc.) devuelven lo esperado. ",page:"3",url:"",level:"2",children:[]},{caption:"●​Para detectar errores temprano en el desarrollo. ",page:"3",url:"",level:"2",children:[]},{caption:"●​Para reducir el riesgo de que algo se rompa al modificar código. ",page:"3",url:"",level:"2",children:[]},{caption:"●​Para documentar comportamientos esperados, lo cual también ayuda a otros desarrolladores. ",page:"3",url:"",level:"2",children:[]},{caption:"Instalación y preparación del proyecto ",page:"3",url:"",level:"2",children:[]},{caption:"Creación de casos de prueba ",page:"4",url:"",level:"2",children:[]},{caption:" ",page:"6",url:"",level:"2",children:[]},{caption:" ",page:"6",url:"",level:"2",children:[]},{caption:"Decoradores y aserciones ",page:"6",url:"",level:"2",children:[{caption:"¿Qué es un decorador? ",page:"6",url:"",level:"3",children:[]},{caption:"@pytest.fixture Preparar datos reutilizables ",page:"6",url:"",level:"3",children:[]}]},{caption:"@pytest.mark.parametrize Parametrización y markers: Probar múltiples valores en un solo test ",page:"7",url:"",level:"2",children:[{caption:"Permite probar múltiples combinaciones sin duplicar funciones. ",page:"7",url:"",level:"3",children:[]},{caption:" ",page:"7",url:"",level:"3",children:[]},{caption:"@pytest.mark.<etiqueta> Agrupar o filtrar tests ",page:"7",url:"",level:"3",children:[]}]},{caption:"Implementación en la calculadora. ",page:"8",url:"",level:"2",children:[]},{caption:"Código ",page:"8",url:"",level:"2",children:[{caption:"Explicación detallada del código ",page:"8",url:"",level:"3",children:[{caption:"a. Fixtures con @pytest.fixture ",page:"8",url:"",level:"4",children:[]},{caption:"b. Parametrización con @pytest.mark.parametrize ",page:"8",url:"",level:"4",children:[]},{caption:"c. Etiquetas con @pytest.mark.<etiqueta> ",page:"9",url:"",level:"4",children:[]}]}]}]},{caption:" ",page:"9",url:"",level:"1",children:[]},{caption:"Aserciones de precisión ",page:"9",url:"",level:"1",children:[{caption:"¿Cómo ejecutar estos tests? ",page:"9",url:"",level:"2",children:[]}]},{caption:" ",page:"10",url:"",level:"1",children:[{caption:"Preguntas para reflexionar ",page:"11",url:"",level:"2",children:[]},{caption:"Próximos pasos ",page:"11",url:"",level:"2",children:[]}]},{caption:"En la Clase N° 5 profundizaremos en HTML y la estructura de páginas web. Estudiaremos la anatomía de un documento HTML, sus elementos principales (div, form, input, button) y aprenderemos a inspeccionar elementos con las DevTools del navegador para preparar la automatización web con Selenium. ",page:"11",url:"",level:"1",children:[]},{caption:" ",page:"11",url:"",level:"1",children:[]},{caption:"Automatizando en TalentoLab ",page:"11",url:"",level:"1",children:[]},{caption:"Ejercicios prácticos  ",page:"12",url:"",level:"1",children:[{caption:"Pytest ",page:"12",url:"",level:"2",children:[]}]}];