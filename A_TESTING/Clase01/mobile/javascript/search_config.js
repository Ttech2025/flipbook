var textForPages = ["","Clase  N°1  |  Introducción  al  Automation                    Testing                   Temario:                      ●  ¿Qué es Automation Testing?                    ●  Rol del Automation Tester en el ciclo de desarrollo                    ●  Herramientas más utilizadas en Automation Testing                    ●  Habilidades necesarias para un Automation Tester                    ●  Mercado laboral y oportunidades                    ●  Instalación del entorno básico:                           ○  Python                           ○  Visual Studio Code                           ○  Configuración inicial                   Objetivos de clase:                  En  esta  clase  vamos  a  introducirnos  en  el  mundo  del  Automation  Testing.  Vamos  a                entender  qué  es,  para  qué sirve, el rol del Automation Tester, qué herramientas se usan                frecuentemente, las habilidades necesarias para tener éxito en este rol, las oportunidades                laborales  y  cómo  configurar  tu  entorno  de  trabajo  básico  para  empezar  a  automatizar                pruebas. Además, vamos a repasar brevemente los temas que veremos a lo largo del curso.","¿Qué aprenderemos en la cursada?                  Durante las próximas clases, cubriremos en profundidad los siguientes temas:                     ●  Módulo 1: Introducción y Fundamentos                            ○  Introducción al Automation Testing y configuración inicial                           ○  Fundamentos de Python                           ○  Control de versiones con Git                           ○  Pytest y automatización básica                           ○  HTML y estructura web básica                     ●  Módulo 2: Selenium y Automatización Web                            ○  DOM y selectores CSS/XPath                           ○  Introducción a Selenium WebDriver                           ○  Localización de elementos y acciones en Selenium                           ○  Page Object Model (POM)                     ●  Módulo 3: Técnicas Avanzadas de Automatización                            ○  Manejo de datos de prueba                           ○  Automatización de pruebas API                           ○  Reportes y logging                     ●  Módulo 4: BDD, CI/CD y Proyecto Final                           ○  Behavior-Driven Development (BDD) con Behave                           ○  Integración continua (CI/CD)                           ○  Proyecto final y cierre del curso                   Al finalizar el curso:                  Serán capaces de automatizar flujos clave de una aplicación web, utilizando herramientas                como  Selenium,  Pytest  y  Git.  Aplicarán  buenas  prácticas  de  testing  automatizado  y                documentarán su trabajo de forma profesional, desarrollando un proyecto completo desde la                planificación hasta la ejecución y validación de pruebas.","¿Qué hace un Tester?                 Recordemos  que  un  tester,  también  conocido  como                analista  de  pruebas  o  QA  (Quality  Assurance)                tester,  es  el  profesional  responsable  de  verificar que                un producto de software funcione correctamente antes                de que se libere al usuario final. Su tarea principal es                detectar    errores,   fallos   o   comportamientos                inesperados  en  las  aplicaciones  para  garantizar que                cumplan  con  los  requisitos  funcionales  y  de  calidad                establecidos.                   Principales funciones de un tester:                      1.  Analizar  requerimientos:  Revisa  los  documentos  funcionales  y  técnicos  para                        entender qué debe hacer el software.                    2.  Diseñar  casos  de  prueba:  Crea  escenarios  específicos que permitan comprobar                        que cada funcionalidad del sistema funciona correctamente.                    3.  Ejecutar pruebas:                           ○  Pruebas manuales: Interactuar directamente con el sistema como lo haría                               un usuario.                           ○  Pruebas  automatizadas:  Usar  herramientas  para  ejecutar  pruebas                               repetitivas  o  complejas  de  forma automática (por ejemplo, con Selenium o                               JUnit).                    4.  Registrar defectos: Documenta los errores encontrados (bugs), cómo reproducirlos                        y su impacto, generalmente en herramientas como Jira o TestRail.                    5.  Realizar pruebas de regresión: Verifica que una nueva funcionalidad o corrección                        no haya afectado otras partes del sistema.                    6.  Colaborar con el equipo de desarrollo: Trabaja junto a programadores, analistas y                        otros  roles  para  resolver  problemas,  proponer  mejoras  y garantizar la calidad del                        producto.                    7.  Validar  correcciones:  Una  vez  que  los  errores  son  corregidos  por  los                        desarrolladores, el tester los vuelve a probar para confirmar que están solucionados.","¿Qué es Automation Testing?                 El  Automation  Testing es el proceso mediante el cual                se  emplean  herramientas  y  scripts  especializados para                ejecutar  automáticamente  casos  de  prueba  sobre  una                aplicación o sistema. Esta automatización permite validar                funcionalidades  de  forma  más  rápida,  precisa  y                repetible,  reduciendo  significativamente  el  margen  de                error humano y los tiempos de ejecución en comparación                con las pruebas manuales.                    Rol del Automation Tester en el ciclo de desarrollo:                 El  Automation  Tester  es  el  profesional  encargado  de  diseñar, desarrollar y mantener                scripts de prueba automatizados, alineados con los requisitos funcionales y técnicos del                software.  Su  rol  es  clave  en  la  detección  temprana  de  errores,  ya  que  permite  validar                continuamente nuevas versiones del sistema mediante pruebas de regresión, integración y                rendimiento.  Al  integrarse  en  flujos  de  desarrollo  ágil  y DevOps, contribuye a mejorar la                calidad, estabilidad y eficiencia del proceso de entrega de software.                   Herramientas más utilizadas en Automation Testing:                      ●  Selenium WebDriver: Herramienta para automatizar pruebas de navegadores web,                        permitiendo simular acciones del usuario real.                    ●  Pytest:  Framework  de  pruebas  en  Python  que  facilita  la escritura y ejecución de                        casos de prueba automáticos.                    ●  Postman: Herramienta para automatizar pruebas de APIs, facilitando la creación y                        ejecución de peticiones HTTP.                    ●  Jenkins/GitHub  Actions:  Plataformas  de  Integración  Continua  que  permiten                        ejecutar pruebas automatizadas cada vez que hay cambios en el código.","Habilidades necesarias para un Automation Tester:                      ●  Programación básica                 Es  necesario  manejar  al  menos  un  lenguaje  como                Python  o  Java  para  escribir  y  mantener  scripts  de                prueba automatizados.                     ●  Lógica y análisis crítico                  Permite  entender  el  comportamiento  del  sistema  y                crear  pruebas  que  cubran  diferentes  escenarios,                incluso los menos evidentes.                      ●  Atención al detalle                 Detectar  errores  sutiles  en  los  resultados  de  las                pruebas requiere observar cuidadosamente el funcionamiento del software.                     ●  Comunicación efectiva:                 Es clave para documentar fallos con claridad y colaborar con desarrolladores, testers y otros                miembros del equipo.                    Mercado laboral y oportunidades:                  El mercado demanda cada vez más Automation Testers debido a la necesidad creciente de                lanzar  software  de  calidad  rápidamente.  Los  Automation  Testers  son  muy  solicitados en                sectores como tecnología, banca, comercio electrónico, salud, telecomunicaciones y otros                donde la calidad y rapidez son fundamentales.                    La paradoja del Automation Testing:                 Curiosamente, una de las paradojas del Automation Testing es                que  usamos  software  para  verificar  otros  sistemas  de                software.  Es  decir,  necesitamos  asegurarnos  que  nuestras                herramientas  y  scripts  sean  altamente  confiables,  ya  que                cualquier  error  en  estos  podría  generar  falsos  positivos  o                negativos en las pruebas automatizadas.","  Storytelling                 ¡Bienvenido a TalentoLab!                                                     Nos complace darte la bienvenida nuevamente a nuestro                                                  equipo. En Talento Lab, una consultora líder especializada                                                  en  soluciones  tecnológicas,  estamos  iniciando  un                                                  proyecto  clave  para  automatizar  las  pruebas  del  nuevo                                                  sistema  interno  de  gestión  de  talentos.  Tu  rol  como                                                  Automation  Tester  Junior será esencial para asegurar la                                                  calidad  y  eficiencia  de  nuestro  sistema,  contribuyendo                significativamente al éxito del proyecto y la satisfacción de nuestros clientes internos.                 Nuestra forma de trabajar: Metodología Agile                  En Talento Lab, trabajamos con la metodología Agile, un enfoque iterativo e incremental que                prioriza  la  colaboración,  la  flexibilidad  y  la  entrega  continua  de  valor.  Esto  significa  que                trabajamos  en  ciclos  cortos  llamados  Sprints, adaptándonos a los cambios y entregando                resultados tangibles en cada iteración.                 Roles clave en nuestro equipo Agile:                      ●  Product Owner (PO): Representa al cliente y define la visión del producto. Prioriza                        las funcionalidades y se asegura de que el equipo trabaje en lo más valioso.                    ●  Scrum  Master:  Facilita  el  trabajo  del equipo, eliminando obstáculos y asegurando                        que se sigan las prácticas Agile.                    ●  Equipo  de  Desarrollo:  Diseña,  construye  y  prueba  el  producto.  Incluye  testers,                        desarrolladores y otros roles necesarios.                   Objetivo General                 El objetivo principal de este proyecto es garantizar el correcto funcionamiento del sitio web                de  Talento  Lab,  brindando  una  experiencia  de  usuario  óptima  y  eficiente.  Para  ello,                contamos  con  tu  expertise  para  llevar  a  cabo  pruebas  exhaustivas  y  detalladas,  que                permitan  identificar  y  documentar  cualquier  error,  problema  de  usabilidad  o  aspecto                susceptible de mejora.                               ¿Cómo trabajaremos?                               Silvia: Product Owner. Silvia definirá la prioridad de los defectos.                                Matias:  Automation  Tester  Senior.  Matias  te  ayudará  en  tu  rol  como  QA                             Automation tester junior.","Ejercicio Práctico                   Configuración del entorno de trabajo.                  Se te solicita que prepares tu entorno de trabajo para empezar lo antes posible. Para ello,                sigue estos pasos:                     ●  Instala Python desde https://www.python.org/downloads/. Selecciona la opción \"Add                        Python to PATH\" al instalar y verifica la instalación ejecutando en consola: python                        --version.                    ●  Instala Visual Studio Code desde https://code.visualstudio.com/download. Sigue los                        pasos por defecto durante la instalación.                    ●  Abre VS Code, crea una carpeta llamada \"curso-automation-testing\".                    ●  Instala las extensiones \"Python\" y \"Pytest\" en VS Code.                    ●  Dentro de la carpeta, crea un archivo test.py con el código:                          print(\"¡Hola Automation Tester!\")                     ●  Ejecuta el archivo desde la terminal integrada para verificar la correcta configuración.                                   Matías espera que tengas tu entorno listo para comenzar las primeras tareas                               en la siguiente sesión.",""];