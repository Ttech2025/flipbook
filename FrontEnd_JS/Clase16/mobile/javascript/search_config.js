var textForPages = ["«Talento Tech»                                Front End                Js                 CLASE 16","Clase 16 - “Revisión ﬁnal y                  despedida”                            ¡Felicitaciones por completar Frontend!                  Ya estás listo para el próximo nivel. Después de horas de código, estilos CSS elegantes y                funciones mágicas en JavaScript, llegó el momento de pensar en todo lo que pasa detrás                de escena. Sí, hablamos del backend.                  ¿Te imaginás transformar tu e-commerce en algo más completo? Ahora no solo vas a                poder mostrar productos, ¡también vas a manejar carritos, usuarios y bases de datos! En                Talento Tech, te damos dos opciones geniales para aprender:                      ●   Java, el clásico que mueve al mundo corporativo.                    ●   Node.js, el motor de lo moderno y ágil.                  Y lo mejor de todo: te convertís en un Full Stack Developer, capaz de manejar todo,                desde el diseño visual hasta las tripas del sistema.","Temario                      1. Frontend, Backend y Full Stack: ¿Qué significan estos roles?                           ○   ¿Qué hace cada uno?                           ○   Ejemplos cotidianos que usan estas tecnologías.                    2. ¡Bienvenido al Backend!                           ○   ¿Qué es y por qué es esencial?                           ○   ¿Qué puede hacer tu e-commerce con un backend?                    3. Java y Node.js: Elegí tu camino                           ○   Introducción a Java.                           ○   Introducción a Node.js.                    4. Herramientas clave en Java                           ○   Spring Boot: El framework para proyectos serios.                           ○   Hibernate: Un puente entre Java y las bases de datos.                           ○   Maven: Tu asistente personal para manejar dependencias.                    5. Herramientas clave en Node.js                           ○   El stack MERN: MongoDB, Express, React y Node.js.                           ○   APIs rápidas con Express.js.                    6. Aplicaciones prácticas: Java vs Node.js                           ○   Casos reales de uso.                           ○   Qué elegir según tus metas.                    7. Convirtiéndote en Full Stack Developer                           ○   Cómo integrar backend y frontend.                           ○   El potencial del curso de backend en Talento Tech.                     1. Frontend, Backend y Full Stack: ¿Qué significan estos roles?                  Frontend Developer                 Imaginá que estás diseñando la vidriera de un local: querés que sea atractiva y que invite a                entrar. El frontend es eso: todo lo que el usuario ve e interactúa. Botones, formularios,                animaciones, todo hecho con HTML, CSS y JavaScript.","Backend Developer                  Ahora, pensá en lo que pasa en el depósito del local: manejar el stock, procesar pedidos,                registrar clientes. El backend es esa parte invisible que hace que todo funcione.                      ●   Maneja datos: carritos de compras, usuarios, inventarios.                    ●   Usa tecnologías como Java y Node.js para garantizar que el motor funcione sin                        problemas.                                                      Full Stack Developer                  El capo total. Es como ser dueño del local y del depósito: sabe cómo diseñar la vidriera y                manejar el stock. Un Full Stack Developer une ambos mundos para crear aplicaciones                completas.","2. ¡Bienvenido al Backend!                  ¿Para qué sirve?                 Imaginá que alguien entra a tu e-commerce. Sin un backend, todo es estático: podés                mostrar productos, pero nada más. Con un backend, podés:                     ●   Crear cuentas de usuario.                    ●   Procesar carritos de compras.                    ●   Enviar mails automáticos con confirmaciones de compra.                 Es el \"cerebro\" de tu aplicación, y vos ahora podés construirlo.                     3. Java y Node.js: Elegí tu camino                  Ambos son geniales, pero cada uno tiene su estilo.                 Java                 ¿Sabías que bancos, aerolíneas y hasta sistemas de salud funcionan con Java? Es                confiable, seguro y súper robusto. Ideal para empresas grandes.                 Node.js","¿Usaste Netflix o MercadoLibre? Node.js está detrás. Es rápido, moderno y perfecto para                startups o aplicaciones que necesitan alta velocidad.                     4. Herramientas clave en Java                         Spring Boot                 Es como tener un chef personal en tu cocina. Con Spring Boot, podés armar aplicaciones                complejas rápidamente y sin complicarte.                        Hibernate                 Te ahorra escribir código aburrido para conectarte con bases de datos. Imaginate que podés                manejar tablas como si fueran objetos de Java.                        Maven                 ¿Te imaginás buscar cada ingrediente antes de cocinar? Maven hace eso por vos: descarga                y organiza las librerías que necesitás.","5. Herramientas clave en Node.js                  El stack MERN                                           Es el combo ganador:                     ●   MongoDB: Una base de datos moderna y flexible.                    ●   Express.js: Un framework ágil para crear APIs.                    ●   React: Lo que aprendiste en frontend, aplicado al máximo.                    ●   Node.js: El motor de todo esto.                  APIs rápidas con Express.js                 Express.js te permite crear rutas y manejar datos en tiempo récord. Perfecto para                aplicaciones dinámicas.                     6. Aplicaciones prácticas: Java vs Node.js                 Java                      ●   Ideal para bancos, hospitales y empresas grandes.                    ●   Backend robusto con alta seguridad.","●   Manejo eficiente de bases de datos con Hibernate.                  Node.js                     ●   Perfecto para startups o aplicaciones con mucha interacción, como chats en tiempo                        real.                    ●   Backend ligero y rápido.                    ●   Uso del stack MERN para proyectos modernos.                    7. Convirtiéndote en Full Stack Developer                  Con lo que aprendiste en frontend y sumando Java o Node.js, podés:                     ●   Integrar tu carrito de compras con un backend que procese pedidos en tiempo real.                    ●   Crear APIs para manejar usuarios y bases de datos.                    ●   Diseñar aplicaciones completas que sean tanto atractivas como funcionales.                 ¡Y lo mejor! Te convertís en un Full Stack Developer listo para el mundo laboral.                  ¿Listo para el desafío? En Talento Tech, te acompañamos en el camino.",""];